descriptor_id: CARBONARA_FASTERER # this is the identifier we use in .mega-linter.yml
descriptor_type: language # language/format/tooling_format
# descriptor_flavors: # Not used for 'plugin' descriptors, i.e. not relevant for Carbonara
# - cupcake
# - ruby
file_extensions:
  - ".rb"
# files_sub_directory:

linters: # required!
  # FASTERER
  - linter_name: fasterer # required!
    cli_executable: fasterer # megalinter will call either cli_executable, or linter_name if cli_executable is not present
    config_file_name: .fasterer.yml
    # is_formatter: false

    # cli_help_arg_name:
    # cli_version_arg_name:
    # cli_lint_extra_args:
    # cli_lint_fix_arg_name:
    # cli_lint_fix_remove_args:

    examples: # required! Add an example with and without configuration file in the command
      - "fasterer"
      - "fasterer"

    install: # required!
      dockerfile:
        - RUN gem install fasterer # this should a single, Docker 'RUN' command (although can be chained with &&)

    linter_text: |
      ⚡ Don't make your Rubies go fast. Make them go fasterer ™. ⚡

    linter_url: https://github.com/DamirSvrtan/fasterer # required!
    linter_repo: https://github.com/DamirSvrtan/fasterer
    linter_spdx_license: MIT
    linter_rules_url: https://github.com/DamirSvrtan/fasterer/tree/master/lib/fasterer/scanners
    # linter_banner_image_url:
    # linter_rules_configuration_url:
    # linter_rules_inline_disable_url:
    # linter_megalinter_ref_url:

    cli_lint_warnings_regex: "^[^:]+:\\d+\\s+.*$"
    # cli_lint_errors_regex: "(?m)^✖ "
    cli_lint_warnings_count: "regex_count"
    # cli_lint_errors_count: "regex_count"

    version_extract_regex: 'using (RubyParser::V\d+)'
